// InternetFriends Design System - Spacing & Layout Tokens
// Modular SCSS tokens for spacing, radius, and layout using @use pattern

@use "sass:map";

// Spacing Scale (0.25rem increments)
$spacing: (
  "xs": 0.25rem,    // 4px
  "sm": 0.5rem,     // 8px
  "md": 0.75rem,    // 12px
  "lg": 1rem,       // 16px
  "xl": 1.25rem,    // 20px
  "2xl": 1.5rem,    // 24px
  "3xl": 2rem,      // 32px
  "4xl": 2.5rem,    // 40px
  "5xl": 3rem,      // 48px
);

// Compact Border Radius System (max 12px for backgrounds)
$radius: (
  "xs": 0.25rem,    // 4px - Ultra compact
  "sm": 0.375rem,   // 6px - Small compact
  "md": 0.5rem,     // 8px - Medium compact
  "lg": 0.75rem,    // 12px - Large (max for backgrounds)
);

// Z-Index Scale
$z-index: (
  "hide": -1,
  "auto": auto,
  "base": 0,
  "docked": 10,
  "dropdown": 1000,
  "sticky": 1100,
  "banner": 1200,
  "overlay": 1300,
  "modal": 1400,
  "popover": 1500,
  "skip-link": 1600,
  "toast": 1700,
  "tooltip": 1800,
);

// Breakpoints (mobile-first)
$breakpoints: (
  "xs": 0px,
  "sm": 640px,
  "md": 768px,
  "lg": 1024px,
  "xl": 1280px,
  "2xl": 1536px,
);

// Container Max Widths
$container-sizes: (
  "xs": 100%,
  "sm": 640px,
  "md": 768px,
  "lg": 1024px,
  "xl": 1200px,     // Custom max-width for InternetFriends
  "2xl": 1200px,    // Keep consistent at 1200px
);

// Layout Constants
$header-height: 4rem;           // 64px
$sidebar-width: 16rem;          // 256px
$sidebar-collapsed: 4rem;       // 64px
$footer-height: auto;
$container-padding: map.get($spacing, "lg");
$container-max-width: map.get($container-sizes, "xl");

// Touch Targets (for mobile accessibility)
$touch-target-min: 44px;
$touch-target-recommended: 48px;
$touch-target-comfortable: 56px;
$touch-spacing-min: 8px;
$touch-spacing-recommended: 16px;

// Utility Functions
@function spacing($size) {
  @return map.get($spacing, $size);
}

@function radius($size) {
  @return map.get($radius, $size);
}

@function z-index($layer) {
  @return map.get($z-index, $layer);
}

@function breakpoint($size) {
  @return map.get($breakpoints, $size);
}

@function container-size($size) {
  @return map.get($container-sizes, $size);
}

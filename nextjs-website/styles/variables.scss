// InternetFriends Design System Variables
// SCSS variables for consistent styling across the application

// Import design tokens from constants (if using CSS custom properties)
// This file bridges SCSS and our TypeScript design system

// Brand Colors (InternetFriends)
$if-primary: #3b82f6;
$if-primary-hover: #2563eb;
$if-primary-light: rgba(59, 130, 246, 0.08);
$if-primary-active: rgba(59, 130, 246, 0.12);

// Glass Morphism System
$glass-bg-header: rgba(255, 255, 255, 0.85);
$glass-bg-header-scrolled: rgba(255, 255, 255, 0.92);
$glass-bg-overlay: rgba(255, 255, 255, 0.95);
$glass-bg-modal: rgba(255, 255, 255, 0.98);
$glass-border: rgba(255, 255, 255, 0.12);
$glass-border-enhanced: rgba(255, 255, 255, 0.18);
$glass-border-outset: rgba(59, 130, 246, 0.15);

// Glass Morphism Dark Theme
$glass-dark-bg-header: rgba(17, 24, 39, 0.85);
$glass-dark-bg-header-scrolled: rgba(17, 24, 39, 0.92);
$glass-dark-bg-overlay: rgba(17, 24, 39, 0.95);
$glass-dark-bg-modal: rgba(17, 24, 39, 0.98);
$glass-dark-border: rgba(255, 255, 255, 0.08);
$glass-dark-border-enhanced: rgba(255, 255, 255, 0.12);

// Light Theme Colors
$colors-light: (
  'text-primary': #111827,
  'text-secondary': #6b7280,
  'text-tertiary': #9ca3af,
  'text-contrast': #000000,
  'text-inverse': #ffffff,

  'bg-primary': #ffffff,
  'bg-secondary': #f9fafb,
  'bg-tertiary': #f3f4f6,
  'bg-muted': #e5e7eb,

  'border-primary': #e5e7eb,
  'border-secondary': #d1d5db,
  'border-focus': #60a5fa,
  'border-error': #ef4444,
  'border-success': #10b981,
  'border-warning': #f59e0b,

  'success': #10b981,
  'warning': #f59e0b,
  'error': #ef4444,
  'info': #3b82f6
);

// Dark Theme Colors
$colors-dark: (
  'text-primary': #ffffff,
  'text-secondary': #d1d5db,
  'text-tertiary': #9ca3af,
  'text-contrast': #ffffff,
  'text-inverse': #000000,

  'bg-primary': #111827,
  'bg-secondary': #1f2937,
  'bg-tertiary': #374151,
  'bg-muted': #4b5563,

  'border-primary': #374151,
  'border-secondary': #4b5563,
  'border-focus': #60a5fa,
  'border-error': #ef4444,
  'border-success': #10b981,
  'border-warning': #f59e0b,

  'success': #10b981,
  'warning': #f59e0b,
  'error': #ef4444,
  'info': #3b82f6
);

// Spacing Scale (0.25rem increments)
$spacing: (
  'xs': 0.25rem,    // 4px
  'sm': 0.5rem,     // 8px
  'md': 0.75rem,    // 12px
  'lg': 1rem,       // 16px
  'xl': 1.25rem,    // 20px
  '2xl': 1.5rem,    // 24px
  '3xl': 2rem,      // 32px
  '4xl': 2.5rem,    // 40px
  '5xl': 3rem       // 48px
);

// Compact Border Radius System (max 12px for backgrounds)
$radius: (
  'xs': 0.25rem,   // 4px - Ultra compact
  'sm': 0.375rem,  // 6px - Small compact
  'md': 0.5rem,    // 8px - Medium compact
  'lg': 0.75rem    // 12px - Large (max for backgrounds)
);

// Typography Scale
$font-size: (
  'xs': 0.75rem,     // 12px
  'sm': 0.875rem,    // 14px
  'base': 1rem,      // 16px
  'lg': 1.125rem,    // 18px
  'xl': 1.25rem,     // 20px
  '2xl': 1.5rem,     // 24px
  '3xl': 1.875rem,   // 30px
  '4xl': 2.25rem,    // 36px
  '5xl': 3rem        // 48px
);

// Font Weights
$font-weight: (
  'light': 300,
  'normal': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700
);

// Line Heights
$line-height: (
  'tight': 1.25,
  'normal': 1.5,
  'relaxed': 1.75
);

// Shadow System (subtle shadows with max 0.15 opacity)
$shadows: (
  'sm': 0 1px 2px 0 rgba(0, 0, 0, 0.05),
  'md': 0 4px 6px -1px rgba(0, 0, 0, 0.1),
  'lg': 0 10px 15px -3px rgba(0, 0, 0, 0.1),
  'glass': 0 4px 6px -1px rgba(59, 130, 246, 0.15),
  'inner': inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
  'none': none
);

// Z-Index Scale
$z-index: (
  'hide': -1,
  'auto': auto,
  'base': 0,
  'docked': 10,
  'dropdown': 1000,
  'sticky': 1100,
  'banner': 1200,
  'overlay': 1300,
  'modal': 1400,
  'popover': 1500,
  'skip-link': 1600,
  'toast': 1700,
  'tooltip': 1800
);

// Animation Durations
$duration: (
  'instant': 0ms,
  'fast': 150ms,
  'normal': 300ms,
  'slow': 500ms,
  'slower': 750ms,
  'slowest': 1000ms
);

// Animation Easings
$easing: (
  'linear': linear,
  'ease-in': cubic-bezier(0.4, 0, 1, 1),
  'ease-out': cubic-bezier(0, 0, 0.2, 1),
  'ease-in-out': cubic-bezier(0.4, 0, 0.2, 1),
  'bounce': cubic-bezier(0.68, -0.55, 0.265, 1.55),
  'smooth': cubic-bezier(0.25, 0.46, 0.45, 0.94),
  'sharp': cubic-bezier(0.55, 0.085, 0.68, 0.53),
  'glass': cubic-bezier(0.25, 0.46, 0.45, 0.94)
);

// Breakpoints (mobile-first)
$breakpoints: (
  'xs': 0px,
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1280px,
  '2xl': 1536px
);

// Container Max Widths
$container-sizes: (
  'xs': 100%,
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1200px,    // Custom max-width for InternetFriends
  '2xl': 1200px    // Keep consistent at 1200px
);

// Component Variants
$button-variants: (
  'primary': (
    'background': $if-primary,
    'background-hover': $if-primary-hover,
    'color': #ffffff,
    'border': $if-primary
  ),
  'secondary': (
    'background': transparent,
    'background-hover': map-get($colors-light, 'bg-secondary'),
    'color': map-get($colors-light, 'text-primary'),
    'border': map-get($colors-light, 'border-primary')
  )
);

// Layout Constants
$header-height: 4rem;         // 64px
$sidebar-width: 16rem;        // 256px
$sidebar-collapsed: 4rem;     // 64px
$footer-height: auto;
$container-padding: map-get($spacing, 'lg');
$container-max-width: map-get($container-sizes, 'xl');

// Touch Targets (for mobile accessibility)
$touch-target-min: 44px;
$touch-target-recommended: 48px;
$touch-target-comfortable: 56px;
$touch-spacing-min: 8px;
$touch-spacing-recommended: 16px;

// Utility Functions for SCSS
@function spacing($size) {
  @return map-get($spacing, $size);
}

@function radius($size) {
  @return map-get($radius, $size);
}

@function color-light($color) {
  @return map-get($colors-light, $color);
}

@function color-dark($color) {
  @return map-get($colors-dark, $color);
}

@function font-size($size) {
  @return map-get($font-size, $size);
}

@function shadow($size) {
  @return map-get($shadows, $size);
}

@function z-index($layer) {
  @return map-get($z-index, $layer);
}

@function duration($speed) {
  @return map-get($duration, $speed);
}

@function easing($type) {
  @return map-get($easing, $type);
}

@function breakpoint($size) {
  @return map-get($breakpoints, $size);
}

// Export CSS Custom Properties (for JavaScript access)
:root {
  // Brand colors
  --if-primary: #{$if-primary};
  --if-primary-hover: #{$if-primary-hover};
  --if-primary-light: #{$if-primary-light};
  --if-primary-active: #{$if-primary-active};

  // Glass system
  --glass-bg-header: #{$glass-bg-header};
  --glass-bg-header-scrolled: #{$glass-bg-header-scrolled};
  --glass-border: #{$glass-border};
  --glass-border-enhanced: #{$glass-border-enhanced};
  --glass-border-outset: #{$glass-border-outset};

  // Spacing
  @each $size, $value in $spacing {
    --spacing-#{$size}: #{$value};
  }

  // Radius
  @each $size, $value in $radius {
    --radius-#{$size}: #{$value};
  }

  // Shadows
  @each $size, $value in $shadows {
    --shadow-#{$size}: #{$value};
  }

  // Durations
  @each $speed, $value in $duration {
    --animation-duration-#{$speed}: #{$value};
  }

  // Easings
  @each $type, $value in $easing {
    --animation-easing-#{$type}: #{$value};
  }

  // Layout
  --header-height: #{$header-height};
  --container-max-width: #{$container-max-width};
  --container-padding: #{$container-padding};

  // Z-index
  @each $layer, $value in $z-index {
    --z-index-#{$layer}: #{$value};
  }

  // Light theme colors
  @each $name, $value in $colors-light {
    --color-#{$name}: #{$value};
  }

  // Transitions
  --transition-default: all #{map-get($duration, 'normal')} #{map-get($easing, 'ease-in-out')};
  --transition-fast: all #{map-get($duration, 'fast')} #{map-get($easing, 'ease-out')};
  --transition-slow: all #{map-get($duration, 'slow')} #{map-get($easing, 'smooth')};
  --transition-color: color #{map-get($duration, 'fast')} #{map-get($easing, 'ease-out')};
  --transition-background: background-color #{map-get($duration, 'normal')} #{map-get($easing, 'ease-out')};
  --transition-border: border-color #{map-get($duration, 'fast')} #{map-get($easing, 'ease-out')};
  --transition-shadow: box-shadow #{map-get($duration, 'normal')} #{map-get($easing, 'ease-out')};
  --transition-transform: transform #{map-get($duration, 'normal')} #{map-get($easing, 'ease-out')};
  --transition-opacity: opacity #{map-get($duration, 'fast')} #{map-get($easing, 'ease-out')};
  --transition-glass: backdrop-filter #{map-get($duration, 'normal')} #{map-get($easing, 'glass')}, background-color #{map-get($duration, 'normal')} #{map-get($easing, 'glass')};
}

// Dark theme colors
[data-theme="dark"] {
  // Glass system dark
  --glass-bg-header: #{$glass-dark-bg-header};
  --glass-bg-header-scrolled: #{$glass-dark-bg-header-scrolled};
  --glass-border: #{$glass-dark-border};
  --glass-border-enhanced: #{$glass-dark-border-enhanced};

  // Dark theme colors
  @each $name, $value in $colors-dark {
    --color-#{$name}: #{$value};
  }
}

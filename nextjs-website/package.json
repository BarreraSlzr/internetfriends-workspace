{
  "name": "@internetfriends/production-landing",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "bun --bun next dev --turbopack",
    "dev:with-validation": "bun run validate:quick && bun --bun next dev --turbopack",
    "dev:skip-validation": "bun --bun next dev --turbopack",
    "build": "NODE_ENV=production bun --bun next build",
    "start": "bun --bun next start",
    "lint": "bunx eslint .",
    "typecheck": "bunx tsc --noEmit --strict",
    "test": "bun run test:unit",
    "test:unit": "bun test tests/unit/",
    "test:unit:watch": "bun test tests/unit/ --watch",
    "test:e2e": "bunx playwright test",
    "test:playwright": "bunx playwright test",
    "test:all": "bun run test:unit && bun run test:e2e && bun run test:curl:comprehensive",
    "test:visual": "bun run scripts/visual-regression-test.sh",
    "test:visual:percy": "percy exec -- playwright test tests/visual/",
    "test:visual:graphs": "percy exec -- playwright test tests/visual/graph-style-results.spec.ts",
    "test:integration": "bun run scripts/system-integration-test.ts",
    "test:curl": "bun run tests/curl/curl.test.runner.ts",
    "test:curl:health": "bun run tests/curl/curl.test.runner.ts healthCheck --verbose",
    "test:curl:api": "bun run tests/curl/curl.test.runner.ts apiTests --verbose",
    "test:curl:performance": "bun run tests/curl/curl.test.runner.ts performance --verbose",
    "test:curl:security": "bun run tests/curl/curl.test.runner.ts security --verbose",
    "test:curl:analytics": "bun run tests/curl/curl.test.runner.ts analytics --verbose",
    "test:curl:projects": "bun run tests/curl/curl.test.runner.ts projects --verbose",
    "test:curl:events": "bun run tests/curl/curl.test.runner.ts events --verbose",
    "test:curl:auth": "bun run tests/curl/curl.test.runner.ts authentication --verbose",
    "test:curl:integration": "bun run tests/curl/curl.test.runner.ts integration --verbose",
    "test:curl:load": "bun run tests/curl/curl.test.runner.ts load --verbose",
    "test:curl:monitoring": "bun run tests/curl/curl.test.runner.ts monitoring --verbose",
    "test:curl:comprehensive": "bun run test:curl:health && bun run test:curl:api && bun run test:curl:security",
    "test:curl:full-suite": "bun run test:curl:health && bun run test:curl:analytics && bun run test:curl:projects && bun run test:curl:events && bun run test:curl:auth && bun run test:curl:security && bun run test:curl:integration",
    "test:events": "bun test tests/integration/event.compute.integration.test.ts",
    "test:compute": "bun run lib/events/compute.events.ts",
    "test:full-integration": "bun test tests/integration/ && bun run test:curl:comprehensive",
    "demo": "bun run scripts/demo.integration.ts",
    "demo:quick": "bun run scripts/demo.integration.ts --quick",
    "demo:verbose": "bun run scripts/demo.integration.ts --verbose",
    "demo:fossilization": "bun run scripts/fossilization-demo.ts",
    "demo:organisms": "bun run scripts/demo-organisms.ts",
    "demo:dashboard": "bun run scripts/demo-dashboard.ts",
    "demo:analytics": "bun run scripts/demo-analytics.ts",
    "demo:projects": "bun run scripts/demo-projects.ts",
    "validate": "bun run scripts/validate-system.ts",
    "validate:verbose": "bun run scripts/validate-system.ts --verbose",
    "validate:fix": "bun run scripts/validate-system.ts --fix",
    "validate:quick": "bun run scripts/validate-quick.ts",
    "validate:minimal": "bun run typecheck && bun run lint",
    "validate:organisms": "bun run scripts/validate-organisms.ts",
    "validate:api": "bun run scripts/validate-api-endpoints.ts",
    "validate:events": "bun run scripts/validate-event-system.ts",
    "pre-commit": "bun run validate:quick && bun run validate:diagrams && bun run format",
    "pre-commit:full": "bun run validate:quick && bun run validate:diagrams && bun run test:helper && bun run format",
    "debug:browser": "bun run scripts/debug-browser.ts",
    "debug:hotreload": "bun run scripts/check-hotreload.ts",
    "schema:validate": "bun run scripts/validate-schemas.ts",
    "schema:generate": "bun run scripts/generate-schemas.ts",
    "integration:check": "bun run scripts/integration-check.ts",
    "integration:test": "bun run test:curl:integration && bun run test:events",
    "smart:commit": "bun run scripts/smart-commit-orchestrator.ts",
    "events:start": "bun run lib/events/event.system.ts",
    "events:status": "bun run scripts/check-event-system.ts",
    "api:test": "bun run test:curl:api",
    "api:health": "curl -s http://localhost:3000/api/health | jq .",
    "api:start": "bun run dev",
    "monitoring:health": "watch -n 5 'curl -s http://localhost:3000/api/health | jq .status'",
    "monitoring:events": "bun run scripts/monitor-events.ts",
    "benchmark": "bun run test:curl:performance && bun run test:curl:load",
    "benchmark:quick": "bun run test:curl:performance",
    "security:scan": "bun run test:curl:security",
    "performance:test": "bun run test:curl:performance",
    "load:test": "bun run test:curl:load",
    "format": "bunx prettier --write .",
    "format:check": "bunx prettier --check .",
    "scaffold:schema": "bun run scripts/scaffold-schema.ts",
    "scaffold:component": "bun run scripts/scaffold-component.ts",
    "analyze:components": "bun ../components/.opencode/helper.ts --all --json",
    "analyze:components:summary": "bun ../components/.opencode/helper.ts --all",
    "analyze:components:events": "bun ../components/.opencode/helper.ts --all --events",
    "analyze:atomic": "bun ../components/.opencode/helper.ts --level=atomic",
    "analyze:molecular": "bun ../components/.opencode/helper.ts --level=molecular",
    "validate:diagrams": "bun run scripts/scan-diagrams.ts --validate",
    "diagrams:scan": "bun run scripts/scan-diagrams.ts",
    "diagrams:fix": "bun run scripts/scan-diagrams.ts --fix-missing",
    "test:helper": "bun test tests/unit/helper.scoring.test.ts",
    "schema:registry": "bun -e \"import { printSummary } from './schemas/registry'; printSummary()\"",
    "schema:fixtures": "bun run scripts/validate-fixtures.ts --json",
    "fixtures:validate": "bun run scripts/validate-fixtures.ts",
    "events:benchmark": "bun run scripts/benchmark-events.ts --json",
    "snapshot:prod": "bun run scripts/snapshot-prod.ts --json-only",
    "docs:generate": "bun run scripts/generate-docs.ts",
    "opencode:delegate": "bun ../components/scripts/opencode-delegate.ts --json > opencode.delegation.json",
    "opencode:helper": "bun ../components/.opencode/helper.ts --all --events",
    "opencode:orchestrate": "bun scripts/opencode-orchestrator.ts",
    "opencode:orchestrate:bg": "bun scripts/opencode-orchestrator.ts --bg",
    "opencode:monitor": "bun scripts/monitor-opencode.ts",
    "db:setup": "bun run scripts/setup-database.ts",
    "db:reset": "bun run scripts/setup-database.ts reset",
    "db:migrate": "bun run scripts/migrate-fossilization.ts",
    "db:dashboard": "bun run scripts/migrate-fossilization.ts export",
    "db:health": "bun -e \"import { dbService } from './lib/database/service'; console.log(await dbService.healthCheck())\"",
    "quality:dashboard": "bun run db:dashboard && echo 'Dashboard: http://localhost:3000/postgresql-quality-dashboard.html'",
    "dev:monitor": "bun run scripts/dev-monitor.ts",
    "dev:check": "bun run scripts/dev-monitor.ts --check",
    "design-system:generate": "bun run lib/design-system/component-snapshot-generator.ts",
    "design-system:analyze": "bun run design-system:generate && echo 'Component snapshots generated'",
    "dev:with-snapshots": "bun run design-system:generate && bun --bun next dev --turbopack"
  },
  "dependencies": {
    "@ai-sdk/openai": "^2.0.15",
    "@date-fns/tz": "^1.2.0",
    "@radix-ui/react-avatar": "^1.1.2",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.1.4",
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-tabs": "^1.1.2",
    "@reactflow/background": "^11.3.14",
    "@reactflow/controls": "^11.2.14",
    "@reactflow/node-resizer": "^2.2.14",
    "@types/d3": "^7.4.3",
    "@types/dagre": "^0.7.53",
    "@types/react-window": "^1.8.8",
    "@use-gesture/react": "^10.3.1",
    "@vercel/analytics": "^1.4.1",
    "@vercel/postgres-kysely": "^0.10.0",
    "@vercel/sdk": "^1.10.4",
    "@vercel/speed-insights": "^1.1.0",
    "@xyflow/react": "^12.8.3",
    "ai": "^5.0.15",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "d3": "^7.9.0",
    "dagre": "^0.8.5",
    "date-fns": "^4.1.0",
    "gray-matter": "^4.0.3",
    "i18next": "^25.3.2",
    "jose": "^6.0.12",
    "kysely": "^0.27.5",
    "lightweight-charts": "^5.0.8",
    "lucide-react": "^0.469.0",
    "mermaid": "^11.9.0",
    "motion": "^11.15.0",
    "next": "15.1.2",
    "next-intl": "^4.3.4",
    "permix": "^3.5.0",
    "react": "19",
    "react-dom": "19",
    "react-i18next": "^15.6.1",
    "react-intersection-observer": "^9.14.1",
    "react-markdown": "^10.1.0",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "reactflow": "^11.11.4",
    "rehype-highlight": "^7.0.2",
    "rehype-raw": "^7.0.0",
    "remark": "^15.0.1",
    "remark-gfm": "^4.0.1",
    "remark-html": "^16.0.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^4.0.15"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@percy/cli": "^1.31.1",
    "@percy/playwright": "^1.0.9",
    "@playwright/test": "^1.49.1",
    "@types/bun": "^1.2.19",
    "@types/node": "^20",
    "@types/react": "19",
    "@types/react-dom": "19",
    "chokidar": "^4.0.3",
    "eslint": "^9",
    "eslint-config-next": "15.1.2",
    "glob": "^11.0.3",
    "postcss": "^8",
    "prettier": "^3.4.2",
    "sass": "^1.70.0",
    "tailwindcss": "^3.4.1",
    "ts-morph": "^26.0.0",
    "typescript": "^5"
  },
  "engines": {
    "bun": ">=1.2.0",
    "node": ">=20.0.0"
  }
}

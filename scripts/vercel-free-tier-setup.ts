#!/usr/bin/env bun

/**
 * Vercel Free Tier Setup Helper
 * Quick setup script for Vercel AI Gateway on free tier
 */

import { writeFile, readFile, existsSync } from "fs/promises";
import { createAuthManager } from "../lib/auth/vercel-auth-manager";

async function checkVercelToken(): Promise<string> {
  const token = process.env.VERCEL_TOKEN;
  
  if (!token) {
    console.log("‚ùå No VERCEL_TOKEN found in environment");
    console.log("");
    console.log("üîë To get your Vercel token:");
    console.log("1. Go to https://vercel.com/account/tokens");
    console.log("2. Create a new token");
    console.log("3. Add it to your environment:");
    console.log("   export VERCEL_TOKEN='your_token_here'");
    console.log("");
    throw new Error("VERCEL_TOKEN required");
  }
  
  return token;
}

async function setupEnvFile(): Promise<void> {
  const envPath = ".env.local";
  
  if (existsSync(envPath)) {
    console.log("‚úÖ .env.local already exists");
    return;
  }
  
  const envContent = `# Vercel AI Gateway - Free Tier Configuration
# Generated by free tier setup

VERCEL_TOKEN=${process.env.VERCEL_TOKEN || 'your_token_here'}
VERCEL_TIER=free
VERCEL_AUTH_REFRESH_INTERVAL=45
VERCEL_DAILY_REQUEST_LIMIT=1000
VERCEL_MINUTE_REQUEST_LIMIT=20

# Optional: Uncomment and set if you have a team
# VERCEL_TEAM_ID=your_team_id
# VERCEL_AI_GATEWAY_URL=https://gateway.vercel.app/your_team_id
`;
  
  await writeFile(envPath, envContent);
  console.log("‚úÖ Created .env.local with free tier settings");
}

async function testAuth(): Promise<void> {
  try {
    console.log("üß™ Testing authentication...");
    
    const manager = createAuthManager({ tier: 'free' });
    await manager.initialize();
    
    const stats = manager.getUsageStats();
    console.log("‚úÖ Authentication test successful");
    console.log(`üìä Daily limit: ${stats.dailyLimit} requests`);
    
  } catch (error) {
    console.error("‚ùå Authentication test failed:", error);
    throw error;
  }
}

async function main(): Promise<void> {
  console.log("üÜì Vercel AI Gateway Free Tier Setup");
  console.log("=====================================");
  console.log("");
  
  try {
    // Step 1: Check token
    console.log("1Ô∏è‚É£ Checking Vercel token...");
    await checkVercelToken();
    console.log("‚úÖ Vercel token found");
    console.log("");
    
    // Step 2: Setup environment file
    console.log("2Ô∏è‚É£ Setting up environment file...");
    await setupEnvFile();
    console.log("");
    
    // Step 3: Test authentication
    console.log("3Ô∏è‚É£ Testing authentication...");
    await testAuth();
    console.log("");
    
    // Success!
    console.log("üéâ Setup Complete!");
    console.log("");
    console.log("üöÄ Next steps:");
    console.log("   bun scripts/opencode-steady-auth.ts status");
    console.log("   bun scripts/opencode-steady-auth.ts /path/to/project");
    console.log("");
    console.log("üÜì Free tier features:");
    console.log("   ‚Ä¢ 1,000 requests/day");
    console.log("   ‚Ä¢ Usage tracking");
    console.log("   ‚Ä¢ Rate limit protection");
    console.log("   ‚Ä¢ 45-minute token refresh");
    
  } catch (error) {
    console.error("");
    console.error("‚ùå Setup failed:", error);
    console.error("");
    console.error("üîß Manual setup:");
    console.error("1. Get token: https://vercel.com/account/tokens");
    console.error("2. export VERCEL_TOKEN='your_token'");
    console.error("3. Run this script again");
    process.exit(1);
  }
}

main().catch(console.error);
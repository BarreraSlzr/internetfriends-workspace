// Component Preview Node Styles - InternetFriends Design System
@use "sass:map";

// Main preview node container
.previewNode {
  min-width: 320px;
  min-height: 240px;
  background: var(--glass-bg-header);
  border: 1px solid var(--glass-border-enhanced);
  border-radius: var(--radius-lg);
  backdrop-filter: blur(12px);
  box-shadow: var(--shadow-lg);
  transition: all 0.2s ease-in-out;
  position: relative;
  overflow: hidden;

  &.selected {
    border-color: var(--if-primary);
    box-shadow:
      0 0 0 2px var(--if-primary-light),
      var(--shadow-lg);
  }

  &:hover {
    border-color: var(--glass-border-outset);
    box-shadow:
      var(--shadow-lg),
      0 0 0 1px var(--if-primary-light);
  }
}

// Header with component info
.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem;
  background: var(--glass-bg-header-scrolled);
  border-bottom: 1px solid var(--glass-border);
  backdrop-filter: blur(8px);
}

.componentInfo {
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
}

.componentName {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  line-height: 1.25;
}

.componentType {
  font-size: 0.75rem;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.025em;
  font-weight: 500;
}

.controls {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.controlBtn {
  width: 2rem;
  height: 2rem;
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-sm);
  background: var(--bg-primary);
  color: var(--text-secondary);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.15s ease-in-out;
  font-size: 0.875rem;

  &:hover {
    border-color: var(--if-primary);
    color: var(--if-primary);
    background: var(--if-primary-light);
  }

  &.active {
    border-color: var(--if-primary);
    background: var(--if-primary);
    color: white;
  }

  &:focus {
    outline: 2px dashed var(--border-focus);
    outline-offset: 2px;
  }
}

.breakpointIndicator {
  font-size: 0.75rem;
  color: var(--text-muted);
  font-family: "SF Mono", "Monaco", "Cascadia Code", "Roboto Mono", monospace;

  span {
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius-xs);
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
  }
}

// Breakpoint indicators
.breakpointXs span {
  background: #fef3c7;
  border-color: #f59e0b;
  color: #92400e;
}
.breakpointSm span {
  background: #ecfdf5;
  border-color: #10b981;
  color: #065f46;
}
.breakpointMd span {
  background: #eff6ff;
  border-color: #3b82f6;
  color: #1e40af;
}
.breakpointLg span {
  background: #f3e8ff;
  border-color: #8b5cf6;
  color: #5b21b6;
}
.breakpointXl span {
  background: #fdf2f8;
  border-color: #ec4899;
  color: #be185d;
}

// Props panel
.propsPanel {
  padding: 0.75rem;
  background: var(--bg-secondary);
  border-bottom: 1px solid var(--border-primary);
  max-height: 300px;
  overflow-y: auto;

  h4 {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--text-primary);
    margin: 0 0 0.75rem 0;
  }
}

.propsList {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.propItem {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.propLabel {
  font-size: 0.75rem;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.required {
  color: #dc2626;
  font-weight: 600;
}

.propInput,
.propSelect {
  padding: 0.375rem 0.5rem;
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-sm);
  background: var(--bg-primary);
  color: var(--text-primary);
  font-size: 0.875rem;
  transition: all 0.15s ease-in-out;

  &:focus {
    outline: 2px dashed var(--border-focus);
    outline-offset: 2px;
    border-color: var(--if-primary);
  }

  &[type="checkbox"] {
    width: auto;
    transform: scale(1.1);
  }
}

.propDescription {
  font-size: 0.75rem;
  color: var(--text-muted);
  font-style: italic;
  line-height: 1.4;
}

// Preview area
.previewArea {
  position: relative;
  background: var(--bg-primary);
  border: 1px dashed var(--border-primary);
  border-radius: var(--radius-md);
  margin: 0.75rem;
  overflow: auto;
  resize: both;
  min-width: 200px;
  min-height: 150px;

  &.breakpointXs {
    border-color: #f59e0b;
  }
  &.breakpointSm {
    border-color: #10b981;
  }
  &.breakpointMd {
    border-color: #3b82f6;
  }
  &.breakpointLg {
    border-color: #8b5cf6;
  }
  &.breakpointXl {
    border-color: #ec4899;
  }
}

.componentWrapper {
  padding: 1rem;
  height: 100%;
  width: 100%;
  overflow: auto;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
}

.resizeHandle {
  position: absolute;
  bottom: 2px;
  right: 2px;
  width: 16px;
  height: 16px;
  cursor: nw-resize;
  background: var(--if-primary);
  color: white;
  border-radius: var(--radius-xs);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  opacity: 0.7;
  transition: opacity 0.15s ease-in-out;

  &:hover {
    opacity: 1;
  }
}

// Footer metadata
.footer {
  padding: 0.5rem 0.75rem;
  background: var(--glass-bg-header);
  border-top: 1px solid var(--glass-border);
  backdrop-filter: blur(8px);
}

.metadata {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  font-size: 0.75rem;
  color: var(--text-muted);
  font-family: "SF Mono", "Monaco", "Cascadia Code", "Roboto Mono", monospace;

  span {
    padding: 0.125rem 0.375rem;
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: var(--radius-xs);
  }
}

// Connection handles
.handleInput,
.handleOutput {
  width: 12px;
  height: 12px;
  border: 2px solid var(--if-primary);
  background: var(--bg-primary);
  border-radius: 50%;
  transition: all 0.15s ease-in-out;

  &:hover {
    transform: scale(1.2);
    border-width: 3px;
  }
}

.handleInput {
  background: var(--if-primary);
}

.handleOutput {
  background: transparent;
}

// Error state
.errorState {
  padding: 1rem;
  background: #fef2f2;
  border: 1px solid #fecaca;
  border-radius: var(--radius-md);
  color: #dc2626;
  font-size: 0.875rem;

  span {
    font-weight: 600;
    display: block;
    margin-bottom: 0.5rem;
  }

  code {
    font-family: "SF Mono", "Monaco", "Cascadia Code", "Roboto Mono", monospace;
    background: #fee2e2;
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius-xs);
    font-size: 0.75rem;
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .previewNode {
    min-width: 280px;
  }

  .header {
    padding: 0.5rem;
  }

  .controls {
    gap: 0.375rem;
  }

  .controlBtn {
    width: 1.75rem;
    height: 1.75rem;
    font-size: 0.75rem;
  }
}

// Animation keyframes
@keyframes nodeSelect {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}

.previewNode.selected {
  animation: nodeSelect 0.2s ease-in-out;
}

// High contrast mode support
@media (prefers-contrast: high) {
  .previewNode {
    border-width: 2px;
  }

  .controlBtn,
  .propInput,
  .propSelect {
    border-width: 2px;
  }
}

// Reduced motion support
@media  { :global(*) {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
